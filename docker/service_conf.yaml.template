ragflow:
  host: ${RAGFLOW_HOST:-0.0.0.0}
  http_port: 9380
mysql:
  name: '${MYSQL_DBNAME:-rag_flow}'
  user: '${MYSQL_USER:-root}'
  password: '${MYSQL_PASSWORD:-infini_rag_flow}'
  host: '${MYSQL_HOST:-mysql}'
  port: 3306
  max_connections: 900
  stale_timeout: 300
minio:
  user: '${MINIO_USER:-rag_flow}'
  password: '${MINIO_PASSWORD:-infini_rag_flow}'
  host: '${MINIO_HOST:-minio}:9000'
es:
  hosts: 'http://${ES_HOST:-es01}:9200'
  username: '${ES_USER:-elastic}'
  password: '${ELASTIC_PASSWORD:-infini_rag_flow}'
  api_key: '${ES_APIKEY}'
os:
  hosts: 'http://${OS_HOST:-opensearch01}:9201'
  username: '${OS_USER:-admin}'
  password: '${OPENSEARCH_PASSWORD:-infini_rag_flow_OS_01}'
infinity:
  uri: '${INFINITY_HOST:-infinity}:23817'
  db_name: 'default_db'
redis:
  db: 1
  password: '${REDIS_PASSWORD:-infini_rag_flow}'
  host: '${REDIS_HOST:-redis}:6379'

# postgres:
#   name: '${POSTGRES_DBNAME:-rag_flow}'
#   user: '${POSTGRES_USER:-rag_flow}'
#   password: '${POSTGRES_PASSWORD:-infini_rag_flow}'
#   host: '${POSTGRES_HOST:-postgres}'
#   port: 5432
#   max_connections: 100
#   stale_timeout: 30
s3:
  # For AWS S3
  # access_key: 'your_aws_access_key'
  # secret_key: 'your_aws_secret_key'
  # region: 'us-east-1'
  # endpoint_url: 'https://s3.amazonaws.com'
  # bucket: 'your_bucket_name'
  # prefix_path: 'your_prefix_path'
  # signature_version: 'v4'
  # addressing_style: 'path'
  
  # For Google Cloud Storage (GCS) - Two options:
  # Option 1: HMAC Keys (recommended for compatibility)
  # Generate HMAC keys in GCS Console: Storage > Settings > Interoperability > Access keys for service accounts
  # access_key: 'your_gcs_hmac_access_key'
  # secret_key: 'your_gcs_hmac_secret_key'
  # 
  # Option 2: Application Default Credentials (for GCP environments)
  # Leave access_key and secret_key empty, boto3 will use ADC/mounted service accounts
  
  # Current configuration for GCS
  region: '${GCS_REGION:-us-central1}'
  endpoint_url: '${STORAGE_ENDPOINT:-https://storage.googleapis.com}'
  bucket: '${STORAGE_BUCKET:-toteqa_assets}'
  prefix_path: '${STORAGE_PREFIX_PATH:-ragflow}'
  signature_version: 'v4'
  addressing_style: 'path'
# oss:
#   access_key: '${ACCESS_KEY}'
#   secret_key: '${SECRET_KEY}'
#   endpoint_url: '${ENDPOINT}'
#   region: '${REGION}'
#   bucket: '${BUCKET}'
#   prefix_path: '${OSS_PREFIX_PATH}'
# azure:
#   auth_type: 'sas'
#   container_url: 'container_url'
#   sas_token: 'sas_token'
# azure:
#   auth_type: 'spn'
#   account_url: 'account_url'
#   client_id: 'client_id'
#   secret: 'secret'
#   tenant_id: 'tenant_id'
#   container_name: 'container_name'
# user_default_llm:
#   factory: 'Tongyi-Qianwen'
#   api_key: 'sk-xxxxxxxxxxxxx'
#   base_url: ''
#   default_models:
#     chat_model: 'qwen-plus'
#     embedding_model: 'BAAI/bge-large-zh-v1.5@BAAI'
#     rerank_model: ''
#     asr_model: ''
#     image2text_model: ''
oauth:
  oauth2:
    display_name: "${OAUTH2_DISPLAY_NAME:-Okta}"
    client_id: "${OAUTH2_CLIENT_ID}"
    client_secret: "${OAUTH2_CLIENT_SECRET}"
    authorization_url: "${OAUTH2_AUTHORIZATION_URL}"
    token_url: "${OAUTH2_TOKEN_URL}"
    userinfo_url: "${OAUTH2_USERINFO_URL}"
    scope: "${OAUTH2_SCOPE:-openid email profile}"
    redirect_uri: "${OAUTH2_REDIRECT_URI}"
#   oidc:
#     display_name: "OIDC"
#     client_id: "your_client_id"
#     client_secret: "your_client_secret"
#     issuer: "https://your-oauth-provider.com/oidc"
#     scope: "openid email profile"
#     redirect_uri: "https://your-app.com/v1/user/oauth/callback/oidc"
#   github:
#     type: "github"
#     icon: "github"
#     display_name: "Github"
#     client_id: "your_client_id"
#     client_secret: "your_client_secret"
#     redirect_uri: "https://your-app.com/v1/user/oauth/callback/github"
# authentication:
#   client:
#     switch: false
#     http_app_key:
#     http_secret_key:
#   site:
#     switch: false
# permission:
#   switch: false
#   component: false
#   dataset: false
